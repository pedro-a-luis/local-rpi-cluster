---
# Ansible Playbook: Configure Firewall Rules (UFW)
#
# This playbook sets up firewall rules on all cluster nodes and Pi-hole servers
# implementing defense-in-depth security.
#
# Usage:
#   ansible-playbook playbooks/security/firewall-setup.yml
#
# CAUTION: This will block traffic. Ensure you have console access if SSH is blocked.

- name: Configure Firewall on K3s Cluster Nodes
  hosts: all
  become: yes
  gather_facts: yes
  vars:
    cluster_subnet: "192.168.1.240/29"  # .240-.247 (8 nodes)
    management_ips:
      - "192.168.1.80"   # Your workstation
    allowed_ssh_ips:
      - "192.168.1.0/24" # Entire LAN (can be restricted further)

  tasks:
    - name: Install UFW firewall
      apt:
        name: ufw
        state: present
        update_cache: yes

    - name: Reset UFW to defaults
      ufw:
        state: reset
      when: ufw_reset | default(false)

    - name: Set UFW default policies
      ufw:
        direction: "{{ item.direction }}"
        policy: "{{ item.policy }}"
      loop:
        - { direction: 'incoming', policy: 'deny' }
        - { direction: 'outgoing', policy: 'allow' }
        - { direction: 'routed', policy: 'deny' }

    - name: Allow SSH from LAN
      ufw:
        rule: allow
        port: '22'
        proto: tcp
        from_ip: 192.168.1.0/24
        comment: 'SSH from LAN'

    - name: Allow loopback traffic
      ufw:
        rule: allow
        interface: lo
        direction: in

    - name: Allow outgoing to loopback
      ufw:
        rule: allow
        interface: lo
        direction: out

- name: Configure Firewall on K3s Master
  hosts: pi-master
  become: yes
  tasks:
    - name: Allow HTTP/HTTPS (Traefik Ingress)
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
        comment: 'Traefik Ingress'
      loop:
        - '80'
        - '443'

    - name: Allow K3s API from cluster nodes only
      ufw:
        rule: allow
        port: '6443'
        proto: tcp
        from_ip: 192.168.1.240/29
        comment: 'K3s API - cluster only'

    - name: Allow Kubelet from cluster nodes only
      ufw:
        rule: allow
        port: '10250'
        proto: tcp
        from_ip: 192.168.1.240/29
        comment: 'Kubelet - cluster only'

    - name: Deny Kubelet read-only port (should be disabled)
      ufw:
        rule: deny
        port: '10255'
        proto: tcp
        comment: 'Kubelet read-only - DENIED'

    - name: Allow Prometheus Node Exporter from cluster only
      ufw:
        rule: allow
        port: '9100'
        proto: tcp
        from_ip: 192.168.1.240/29
        comment: 'Node Exporter - cluster only'

    - name: DENY VNC (should be disabled)
      ufw:
        rule: deny
        port: '5900'
        proto: tcp
        comment: 'VNC - DENIED'

    - name: Allow NodePort range from LAN
      ufw:
        rule: allow
        port: 30000:32767
        proto: tcp
        from_ip: 192.168.1.0/24
        comment: 'K8s NodePort range'

- name: Configure Firewall on K3s Workers
  hosts: workers
  become: yes
  tasks:
    - name: Allow Kubelet from master only
      ufw:
        rule: allow
        port: '10250'
        proto: tcp
        from_ip: 192.168.1.240
        comment: 'Kubelet - master only'

    - name: Allow Prometheus Node Exporter from cluster only
      ufw:
        rule: allow
        port: '9100'
        proto: tcp
        from_ip: 192.168.1.240/29
        comment: 'Node Exporter - cluster only'

    - name: Allow Longhorn ports from cluster only
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
        from_ip: 192.168.1.240/29
        comment: 'Longhorn - cluster only'
      loop:
        - '9500'  # Longhorn Manager
        - '9502'  # Longhorn Conversion Webhook

- name: Configure Firewall on Pi-hole Servers
  hosts: pihole
  become: yes
  tasks:
    - name: Allow DNS from LAN
      ufw:
        rule: allow
        port: '53'
        proto: "{{ item }}"
        from_ip: 192.168.1.0/24
        comment: 'DNS - LAN only'
      loop:
        - tcp
        - udp

    - name: Allow WireGuard VPN
      ufw:
        rule: allow
        port: '51820'
        proto: udp
        comment: 'WireGuard VPN'

    - name: Allow Pi-hole web interface from LAN only
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
        from_ip: 192.168.1.0/24
        comment: 'Pi-hole web - LAN only'
      loop:
        - '80'
        - '443'
        - '8080'
        - '8443'

- name: Enable UFW Firewall on All Hosts
  hosts: all
  become: yes
  tasks:
    - name: Enable UFW
      ufw:
        state: enabled
        logging: 'low'

    - name: Display UFW status
      command: ufw status verbose
      register: ufw_status
      changed_when: false

    - name: Show firewall rules
      debug:
        var: ufw_status.stdout_lines

    - name: Save iptables rules
      shell: |
        iptables-save > /etc/iptables/rules.v4
        ip6tables-save > /etc/iptables/rules.v6
      args:
        creates: /etc/iptables/rules.v4
      when: ansible_os_family == "Debian"
